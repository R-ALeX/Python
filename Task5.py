#1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем. Об окончании ввода данных свидетельствует пустая строка.

my_file = open("MyFile.txt", "w+")
my_file.write(input('Insert text: '))
my_file.close()

print('------------------------------------')

#2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить подсчет количества строк, количества слов в каждой строке.
from collections import Counter

text_file = open("TextFile.txt", "r", encoding="utf-8")
r = 1
for row in text_file:
    print(r, "Row! Count of words: ", len(row.splitlines()[0]))
    r += 1

print('------------------------------------')

#3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов.
# Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
# Выполнить подсчет средней величины дохода сотрудников.

text_file2 = open("TextFile2.txt", "r", encoding="utf-8")
i = 0
avg = 0
for row in text_file2:
    row = row.split('-')
    row[1] = int(row[1].rstrip('\n'))
    if row[1] < 20000:
        print(row)
    avg = avg + row[1]
    i += 1
print('Average salary:', avg / i)

print('------------------------------------')

#4. Создать (не программно) текстовый файл со следующим содержимым:

#One — 1
#Two — 2
#Three — 3
#Four — 4

# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.

# ATTENTTION: You need to install alpha version - "pip install googletrans==3.1.0a0"

from googletrans import Translator

translator = Translator()
text_file3 = open("TextFile3.txt", "r", encoding="utf-8")
for row in text_file3:
    row = row.split('—')
    row[0] = translator.translate(row[0].rstrip(), dest='ru').text
    row[1] = int(row[1].rstrip('\n'))
    print(row)

print('------------------------------------')


#5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.

text_file4 = open("TextFile4.txt", "r", encoding="utf-8")
list = []
for row in text_file4:
    list = list + [int(number) for number in row.split()]
print('Amount of all elements is equal:', sum(list))

print('------------------------------------')


#6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных,
# практических и лабораторных занятий по этому предмету и их количество.
# Важно, чтобы для каждого предмета не обязательно были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.

#Примеры строк файла:
#Информатика: 100(л) 50(пр) 20(лаб).
#Физика: 30(л) — 10(лаб)
#Физкультура: — 30(пр) —

# Пример словаря:
# {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

import re
dict = {}
text_file5 = open("TextFile5.txt", "r", encoding="utf-8")
for row in text_file5:
    row = row.splitlines()
    row = row[0].split()
    val = '—'
    while val in row:
        row.remove(val)
    for el in range(len(row)):
        row[el] = re.sub(r'\(.*?\)', '', row[el])
    dict[row[0]] = sum([int(number) for number in row[1:]])
print(dict)

print('------------------------------------')

#7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).

# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.

# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

# Подсказка: использовать менеджеры контекста.

text_file6 = open("TextFile6.txt", "r", encoding="utf-8")
dict_firm = {}
dict_avg = {"average_profit": 0}
avg = 0
for row in text_file6:
    row = row.splitlines()
    row = row[0].split()
    dict_firm[row[0]] = int(row[3])
    avg = avg + int(row[2]) - int(row[3])
    dict_avg["average_profit"] = avg
list = [dict_firm, dict_avg]
print(list)

print('------------------------------------')